create table user_friend
(
    id        bigint not null
        primary key,
    friend_id integer,
    user_id   integer
);

alter table user_friend
    owner to neondb_owner;

create table _user
(
    created_at timestamp(6) not null,
    id         bigint generated by default as identity
        primary key,
    updated_at timestamp(6) not null,
    email      varchar(255) not null,
    firstname  varchar(255) not null,
    lastname   varchar(255) not null,
    password   varchar(255) not null,
    role       varchar(255)
        constraint _user_role_check
            check ((role)::text = ANY ((ARRAY ['USER'::character varying, 'MANAGER'::character varying])::text[]))
    );

alter table _user
    owner to neondb_owner;

create table achievement
(
    created_at  timestamp(6) not null,
    id          bigint generated by default as identity
        primary key,
    updated_at  timestamp(6) not null,
    description text         not null,
    name        varchar(255) not null,
    picture     text         not null
);

alter table achievement
    owner to neondb_owner;

create table achievementxuser
(
    achievement_id bigint not null
        constraint fk98cic5rl74g39k75cke4lkn4r
            references achievement,
    user_id        bigint not null
        constraint fkso3xmefijhcqfdafoysx4ul7w
            references _user
);

alter table achievementxuser
    owner to neondb_owner;

create table knowledgebase
(
    created_at timestamp(6) not null,
    id         bigint generated by default as identity
        primary key,
    updated_at timestamp(6) not null,
    content    text         not null,
    name       varchar(255) not null
);

alter table knowledgebase
    owner to neondb_owner;

create table scoreboard
(
    score      integer      not null,
    created_at timestamp(6) not null,
    id         bigint generated by default as identity
        primary key,
    updated_at timestamp(6) not null,
    user_id    bigint
        constraint fkor8rm2bibms34p6t8l38babli
            references _user
);

alter table scoreboard
    owner to neondb_owner;

create table survey
(
    created_at timestamp(6) not null,
    id         bigint generated by default as identity
        primary key,
    updated_at timestamp(6) not null,
    content    text         not null,
    name       varchar(255) not null
);

alter table survey
    owner to neondb_owner;

create table surveyxuser
(
    survey_id bigint not null
        constraint fkjagvuvd7mra8fshyyo20c23hk
            references survey,
    user_id   bigint not null
        constraint fka9vd6ylwby7kj8h3or19vrsl5
            references _user
);

alter table surveyxuser
    owner to neondb_owner;

create table track
(
    created_at timestamp(6) not null,
    id         bigint generated by default as identity
        primary key,
    updated_at timestamp(6) not null,
    name       varchar(255) not null
);

alter table track
    owner to neondb_owner;

create table module
(
    order_in_track integer      not null,
    created_at     timestamp(6) not null,
    id             bigint generated by default as identity
        primary key,
    track_id       bigint
        constraint fk7vhjy34xhm5upwjrasojpy3xn
            references track,
    updated_at     timestamp(6) not null,
    end_content    text         not null,
    name           varchar(255) not null,
    start_content  text         not null
);

alter table module
    owner to neondb_owner;

create table page
(
    order_in_module integer      not null,
    created_at      timestamp(6) not null,
    id              bigint generated by default as identity
        primary key,
    module_id       bigint
        constraint fk4oaif8jsf3uf29oga817wv75h
            references module,
    updated_at      timestamp(6) not null,
    content         text         not null,
    name            varchar(255) not null
);

alter table page
    owner to neondb_owner;

create table user_progress_in_module
(
    last_completed_page_number integer      not null,
    created_at                 timestamp(6) not null,
    id                         bigint generated by default as identity
        primary key,
    module_id                  bigint
        constraint fk5w13hsn0ixbjsb50xrkt2isfd
            references module,
    updated_at                 timestamp(6) not null,
    user_id                    bigint
        constraint fkfnunwk29u4bsnutdb7yyletcs
            references _user,
    name                       varchar(255) not null
);

alter table user_progress_in_module
    owner to neondb_owner;

